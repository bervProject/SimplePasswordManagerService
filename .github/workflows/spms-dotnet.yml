name: SPMS Build (.NET)
on:
    push:
        branches: [main, production]
        tags:
          - v*
    pull_request:
        branches: [main, production]
env:
  IMAGE_NAME_API: spms
  IMAGE_NAME_UI: spms-ui
jobs:
  build:
    runs-on: ubuntu-22.04
    services:
      mongodb:
        image: mongo
        ports:
        - 27017:27017
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
          dotnet-quality: 'preview'
      - name: Install Dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Publish
        run: dotnet publish --no-restore --no-build -o published
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: published
          path: published
      - name: Publish Image
        run: dotnet publish --os linux --arch x64 /t:PublishContainer -c Release
  # docker-push-api:
  #   # Ensure test job passes before pushing image.
  #   needs: build
  #   runs-on: ubuntu-20.04
  #   if: github.event_name == 'push'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: |
  #           bervproject/${{ env.IMAGE_NAME_API }}
  #           ghcr.io/${{ github.repository }}
  #     - name: Build and push Docker images
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: packages/api
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         build-args: |
  #           NODE_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
  # docker-push-ui:
  #   # Ensure test job passes before pushing image.
  #   needs: build
  #   runs-on: ubuntu-20.04
  #   if: github.event_name == 'push'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: |
  #           bervproject/${{ env.IMAGE_NAME_UI }}
  #           ghcr.io/${{ github.repository }}-ui
  #     - name: Build and push Docker images
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: packages/frontend
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
