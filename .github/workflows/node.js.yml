# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
on:
    push:
        branches: [main, production]
        tags:
          - v*
    pull_request:
        branches: [main, production]
env:
  IMAGE_NAME_API: spms
  IMAGE_NAME_UI: spms-ui
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HEROKU_APP_NAME: spms-berv
  CI: true
jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      # Label used to access the service container
      postgres:
        ports:
          - 5432:5432
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: spms
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: |
          yarn --frozen-lockfile
          yarn bootstrap
      - name: Lint & Test
        run: |
          yarn lint
          yarn test
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/spms
      - name: Build
        run: |
          yarn build
        env:
          NODE_ENV: production
      - name: Codecov
        run: bash <(curl -s https://codecov.io/bash)
  # push-api-to-railway:
  #   runs-on: ubuntu-20.04
  #   if: ${{ github.event_name == 'push' }}
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '14.x'
  #     - name: Push to Railway
  #       run: |
  #         npm i -g @railway/cli
  #         [[ "${{ github.ref }}" == "refs/heads/production" ]] && RAILWAY_TOKEN="${{secrets.RAILWAY_PROD}}"
  #         cd packages/api
  #         railway up
  #       env:
  #         RAILWAY_TOKEN: ${{ secrets.RAILWAY_STG }}
  # docker-build:
  #   # Ensure test job passes before pushing image.
  #   needs: build
  #   runs-on: ubuntu-20.04
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Docker Compose Build & Test
  #       run: |
  #         docker-compose build
  #         docker-compose up -d
  #         docker-compose ps
  #         # call API
  #         #curl http://localhost:5000
  #         # call UI
  #         #curl http://localhost:8000
  #         docker-compose down
  # docker-push-api:
  #   # Ensure test job passes before pushing image.
  #   needs: build
  #   runs-on: ubuntu-20.04
  #   if: github.event_name == 'push'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: |
  #           bervproject/${{ env.IMAGE_NAME_API }}
  #           ghcr.io/${{ github.repository }}
  #     - name: Build and push Docker images
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: packages/api
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         build-args: |
  #           NODE_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
  # docker-push-ui:
  #   # Ensure test job passes before pushing image.
  #   needs: build
  #   runs-on: ubuntu-20.04
  #   if: github.event_name == 'push'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: |
  #           bervproject/${{ env.IMAGE_NAME_UI }}
  #           ghcr.io/${{ github.repository }}-ui
  #     - name: Build and push Docker images
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: packages/frontend
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
